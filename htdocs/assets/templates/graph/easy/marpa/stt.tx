<html>
<head>
	<title><: $title :></title>
	<meta http-equiv="cache-control" content="no-cache">
	<meta http-equiv="pragma" content="no-cache">
	<link rel="stylesheet" type="text/css" href="<: $default_css :>">
	<link rel="stylesheet" type="text/css" href="<: $fancy_table_css :>">
</head>
<body>

<h1 align="center">State Transition Table for Graph::Easy::Marpa V <: $version :></h1>

<p>This is the STT for the dialect of Graph::Easy's graph description language recognized by
<a href="http://search.cpan.org/perldoc?Graph%3A%3AEasy%3A%3AMarpa">Graph::Easy::Marpa</a> V <: $version :>.</p>

<p>This table has been exported from an OpenOffice Calc spreadsheet as a CSV file,
with the latter being incorporated into this HTML.</p>

<p>The lexer which reads the STT does not use the last 2 columns, Regexp and Interpretation.<p>

<p>The Regexp column is referred to in the spreadsheet by formulas, and the Interpretation column is just for the reader.</p>

<p>Clearly, this table does not quite cover all of the syntax supported by Graph::Easy.</p>

<p>Graph::Easy::Marpa::Lexer reads this STT, and outputs tokens in an intermediary language.</p>

<p>The STT is actually at the end of Lexer.pm, but options to new() allow you to override that source for the STT.</p>

<p>The lexer uses <a href="http://search.cpan.org/perldoc?Set%3A%3AFA%3A%3AElement">Set::FA::Element</a> to actually process the graph definition.</p>

<p>Graph::Easy::Marpa::Parser reads lexed tokens and builds a data structure in memory representing the graph.</p>

<p>Lastly, the default rendering engine Graph::Easy::Marpa::Renderer::GraphViz2 uses this data structure to create input for
<a href="http://search.cpan.org/perldoc?GraphViz2">GraphViz2</a>.</p>

<p>Note: The regexp for attribute values simply means the real processing takes place in sub validate_attribute_value within
<a href="http://search.cpan.org/perldoc?Graph%3A%3AEasy%3A%3AMarpa%3A%3ALexer%3A%3ADFA">Graph::Easy::Marpa::Lexer::DFA</a>,
and, specifically, attribute values can be quoted with either "..." or '...'. Such quotes are stripped.</p>

: include "basic.table.tx" { table => $table };

<hr />

<h3 class="global_toc_text">Links</h3>

<h2 align="center">Index page for <a href="http://savage.net.au/Graph-module-demos.html">all graph module demos</a></h2>

<h2 align="center">Demo page for <a href="http://savage.net.au/Perl-modules/html/graph.easy.marpa/index.html">Graph::Easy::Marpa</a></h2>

<hr />

<h3 class="global_toc_text">Environment</h3>

: include "fancy.table.tx" { data => $environment };

<hr />
</body>
</html>
